{"version":3,"sources":["apis/keys.ts","redux/youtubeListGetVideos.tsx","redux/youtubeListPlaylist.tsx","redux/store.tsx","component/Footer.tsx","component/Header.tsx","pages/About/About.tsx","pages/Brands/Brands.tsx","pages/Contact/Contact.tsx","pages/Details/Details.tsx","hooks/useTypeSelector.tsx","component/Category/YoutubeVideoList.tsx","component/Category/Category.tsx","component/Loader.tsx","pages/Works/Works.tsx","App.tsx","index.tsx"],"names":["youTubeAcsses","getYoutubeListVideosAction","createAsyncThunk","async","playlistId","thunkAPI","data","axios","get","concat","err","rejectWithValue","errorMessage","youtubeVideosList","createSlice","name","initialState","loading","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","youtubeListPlaylistAction","channelId","youtubeCategory","cartegory","items","store","configureStore","reducer","Footer","_jsxs","className","children","_jsx","src","alt","width","Header","onClickLink","document","getElementById","checked","Link","to","id","type","htmlFor","onClick","About","brandList","Brands","map","value","index","Contact","textarea","setTextarea","useState","message","inputs","setInputs","company","number","email","phone","onChangeInput","e","target","API_PATH","method","placeholder","onChange","required","Button","variant","color","event","email_Input","name_Input","phone_Input","length","alert","url","headers","then","res","status","window","location","pathname","catch","console","preventDefault","Details","_ref","match","params","frameBorder","useAppDispatch","useDispatch","useAppSelector","useSelector","YoutubeVideoList","dispatch","useEffect","_Fragment","Object","keys","snippet","thumbnails","maxres","high","resourceId","videoId","title","TabPanel","props","other","style","role","hidden","Box","VerticalTabs","tabVisible","setTablVisible","CartegoryRef","useRef","setValue","sx","bgcolor","ref","display","Tabs","orientation","handleChange","newValue","borderRight","borderColor","minWidth","TabIndicatorProps","backgroundColor","borderRadius","height","Tab","label","tabVisibleBtn","current","marginLeft","MenuIcon","item","Loader","CircularProgress","size","Works","useLayoutEffect","App","Route","exact","path","component","Switch","ReactDOM","render","React","StrictMode","Provider","BrowserRouter"],"mappings":"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","file":"static/js/main.fd0f7b5d.chunk.js","sourcesContent":["// src/apis/keys.ts\n\ninterface YouTubeAccess {\n    apiKey: string;\n  }\n  \n  export const youTubeAcsses: YouTubeAccess = {\n    apiKey: 'AIzaSyANiEy7XDGB5UkWWDA3JvMGQ8xdDlye3R0'\n  };\n  ","/** 그리곰 픽쳐스 영상리스트 불러오기*/\n/** Playlist 를 이용한 카테고리를 통해 정보를 불러옴 */\n\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { youTubeAcsses } from '../apis/keys';\nimport { youtubeResponse } from \"../getTypes\";\n\ninterface PostState {\n    loading: boolean;\n    error: string | null;\n    data: youtubeResponse | null;\n}\n\nconst initialState = {\n    loading: false,\n    error: null,\n    data: null,\n} as PostState;\n\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3'\n\n// ACTION\nexport const getYoutubeListVideosAction = createAsyncThunk(\n    \"GET/YOUTUBE_PRODUCT\",\n    async (playlistId: string, thunkAPI) => {\n        try {\n            const { data } = await axios.get<youtubeResponse>(\n                `${BASE_URL}/playlistItems?key=${youTubeAcsses.apiKey}&playlistId=${playlistId}&part=snippet&maxResults=30`\n            )\n            return data\n        } catch (err: any) {\n            return thunkAPI.rejectWithValue({\n                errorMessage: '호출에 실패했습니다.'\n            })\n        }\n    }\n);\n\n// SLICE\nconst youtubeVideosList = createSlice({\n    name: \"YOUTUBE_PRODUCT\",\n    initialState,\n    reducers: {},\n    // createAsyncThunk 호출 처리 = extraReducers\n    extraReducers(builder) {\n        builder\n            .addCase(getYoutubeListVideosAction.pending, (state, action) => {\n                state.loading = true;\n            })\n            .addCase(getYoutubeListVideosAction.fulfilled, (state, action: PayloadAction<youtubeResponse>) => {\n                state.loading = false;\n                state.data = action.payload;\n            })\n            .addCase(getYoutubeListVideosAction.rejected, (state, action: PayloadAction<any>) => {\n                state.loading = false;\n                state.error = action.payload;\n            });\n    },\n});\n\n\nexport default youtubeVideosList.reducer;","/** 그리곰 픽쳐스 상업영상 채널아이디를 이용하여 재생목록 불러오기 재생목록은 카테고리로 사용됨.*/\n\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { youTubeAcsses } from '../apis/keys';\nimport { youtubeResponse, cartegory } from \"../getTypes\";\n\ninterface PostState {\n    loading: boolean;\n    error: string | null;\n    cartegory: cartegory\n}\n\nconst initialState = {\n    loading: false,\n    error: null,\n    cartegory: []\n} as PostState;\n\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3'\n\n// ACTION\nexport const youtubeListPlaylistAction = createAsyncThunk(\n    \"GET/YOUTUBE_CHANNELID\",\n    async (channelId: string, thunkAPI) => {\n        try {\n            const { data } = await axios.get<youtubeResponse>(\n                `${BASE_URL}/playlists?key=${youTubeAcsses.apiKey}&channelId=${channelId}&part=snippet&maxResults=30`\n            )\n            return data\n        } catch (err: any) {\n            return thunkAPI.rejectWithValue({\n                errorMessage: '호출에 실패했습니다.'\n            })\n        }\n    }\n);\n\n// SLICE\nconst youtubeCategory = createSlice({\n    name: \"YOUTUBE_PLAYLIST\",\n    initialState,\n    reducers: {},\n    // createAsyncThunk 호출 처리 = extraReducers\n    extraReducers(builder) {\n        builder\n            .addCase(youtubeListPlaylistAction.pending, (state) => {\n                state.loading = true;\n            })\n            .addCase(youtubeListPlaylistAction.fulfilled, (state, action: PayloadAction<youtubeResponse>) => {\n                state.loading = false;\n                state.cartegory = action.payload.items\n            })\n            .addCase(youtubeListPlaylistAction.rejected, (state, action: PayloadAction<any>) => {\n                state.loading = false;\n                state.error = action.payload;\n            });\n    },\n});\n\n\nexport default youtubeCategory.reducer;","// app/store.js //\nimport { configureStore } from '@reduxjs/toolkit'\nimport youtubeVideosList from './youtubeListGetVideos'\nimport youtubeCategory from './youtubeListPlaylist'\n\nexport const store = configureStore({\n    reducer: { youtubeVideosList, youtubeCategory }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;","import React from \"react\";\nimport '../css/Footer.css';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <img className=\"\" src=\"/logo/grigom_black.svg\" alt=\"grigom_black_logo\" width=\"130px\" />\n            <ul className=\"socials\">\n                <li>PHONE : 010.9537.9175</li>\n                <li>EMAIL : director@grigompictures.com</li>\n                <li>Copyright 2020. GRIGOM PICTURES. All rights reserved.</li>\n            </ul>\n        </div>\n    );\n};\nexport default Footer","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../css/Header.css';\n\nfunction Header() {\n\n    const onClickLink = () => {\n        const inputCheckElement = document.getElementById('menu-toggle') as HTMLInputElement\n        inputCheckElement.checked = false;\n    }\n\n    return (\n        <header>\n            <div className=\"header-container\">\n                <div className=\"title-div\">\n                    <Link to=\"/\">\n                        GRIGOM <br /> PICTURES\n                    </Link>\n                </div>\n\n                <div className=\"menu-div\">\n                    <input id=\"menu-toggle\" name=\"menu-toggle\" type=\"checkbox\" />\n                    <label className=\"menu-btn\" htmlFor=\"menu-toggle\">\n                        <span></span>\n                    </label>\n\n                    <ul className=\"menu-box\">\n                        <li>\n                            <Link to=\"/\" onClick={onClickLink}>ABOUT</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/Works\" onClick={onClickLink}>WORKS</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/Brands\" onClick={onClickLink}>BRANDS</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/Contact\" onClick={onClickLink}>CONTACT</Link>\n                        </li>\n                    </ul>\n                </div>\n\n                <div className=\"service-div\">\n                   \n                </div>\n            </div>\n        </header>\n    );\n};\nexport default Header","function About() {\n    return (\n        <div className=\"info-div\">\n\n            <div className=\"info-image\">\n                <img className=\"shot_range\" src=\"/image/shot_range.webp\" alt=\"shot_range\" width=\"100%\" />\n            </div>\n\n            <div className=\"info-written\">\n                <div className=\"info-title\">\n                    <span>\n                        영상 프로덕션 <br />\n                        GRIGOM PICTURES는\n                    </span>\n                </div>\n                <div className=\"info-content\">\n                    <div>\n                        <span>수십개의 파트너 사와 함께 <br /></span>\n                    </div>\n\n                    <div>\n                        <span>다양한 장르의 영상을 <br /></span>\n                    </div>\n\n                    <div>\n                        <span>제작한 경험을 바탕으로 <br /></span>\n                    </div>\n\n                    <div>\n                        <span>국내 공공기관 및 기업, <br /></span>\n                    </div>\n\n                    <div>\n                        <span>바이럴, SNS, 홍보영상, <br /></span>\n                    </div>\n\n                    <div>\n                        <span>행사영상, 유튜브 컨텐츠를 <br /></span>\n                    </div>\n\n                    <div>\n                        <span>제작하고 있습니다.</span>\n                    </div>\n\n                    <div>\n                        <img src=\"/logo/grigom_black.svg\" alt=\"grigom_black\" width=\"200px\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About","const brandList = [\n    { src: \"/logo/koreaculture_logo.png\", alt: \"culturekorea_logo\" },\n    { src: \"/logo/danawa_logo.jpg\", alt: \"danawa_logo\" },\n    { src: \"/logo/dyson_logo.png\", alt: \"dyson_logo\" },\n    { src: \"/logo/hustorm_logo.png\", alt: \"hustorm_logo\" },\n    { src: \"/logo/ksia_logo.png\", alt: \"ksia_logo\" },\n    { src: \"/logo/ksif_logo.jpg\", alt: \"ksif_logo\" },\n    { src: \"/logo/kspo_logo.png\", alt: \"kspo_logo\" },\n    { src: \"/logo/knrea_logo.jpg\", alt: \"knrea_logo\" },\n    { src: \"/logo/kyobo_logo.png\", alt: \"kyobo_logo\" },\n    { src: \"/logo/samsung_card_logo.png\", alt: \"samsung_card_logo\" },\n    { src: \"/logo/sk_dnd_logo.png\", alt: \"sk_dnd_logo\" },\n    { src: \"/logo/tmck_logo.png\", alt: \"tmck_logo\" },\n    { src: \"/logo/tupperwarebrands_logo.png\", alt: \"tupperwarebrands_logo\" },\n    { src: \"/logo/hyundai_logo.png\", alt: \"hyundai_logo\" },\n    { src: \"/logo/pubg_logo.png\", alt: \"pubg_logo\" },\n    { src: \"/logo/seagate_logo.png\", alt: \"seagate_logo\" },\n]\n\nconst Brands = () => {\n    return (\n        <div>\n            <div className=\"title-container\">\n                <div className=\"title\">\n                    <span>BRANDS</span>\n                </div>\n            </div>\n\n            <div className=\"brand-list-box\">\n                {brandList.map((value, index) => (\n                    <div key={index} className=\"brand-list-logo\">\n                        <img src={value['src']} alt={value['alt']} width=\"100%\" />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Brands","import { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\n\ntype inputTypes = {\n    company: string;\n    number: string;\n    email: string;\n    name: string;\n    phone: string;\n}\n\ntype textAreaType = {\n    message: string\n}\n\n\nfunction Contact() {\n    const [textarea, setTextarea] = useState<textAreaType>({\n        message: ''\n    });\n    const [inputs, setInputs] = useState<inputTypes>({\n        company: '',\n        number: '',\n        email: '',\n        name: '',\n        phone: '',\n    })\n\n    const { company, number, email, name, phone } = inputs\n    const { message } = textarea\n\n\n    const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value, name } = e.target;\n        setInputs({\n            ...inputs, // 기존의 input 객체를 복사한 뒤\n            [name]: value // name 키를 가진 값을 value 로 설정\n        });\n    };\n\n    const onChangeTextarea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        const { value, name } = e.target\n        setTextarea({\n            ...textarea,\n            [name]: value\n        });\n    };\n\n    function handleFormSubmit(event: React.FormEvent) {\n        // 언제나 HTMLInputElement 가 반환된다는 것을 알려줌. (타입 단언)\n        const email_Input = (document.getElementById('email') as HTMLInputElement).value\n        const name_Input = (document.getElementById('name') as HTMLInputElement).value\n        const phone_Input = (document.getElementById('phone') as HTMLInputElement).value\n\n        if (email_Input.length === 0) {\n            alert('이메일을 입력해주세요.')\n        } else if (name_Input.length === 0) {\n            alert('담당자 이름을 입력해주세요.')\n        } else if (phone_Input.length === 0) {\n            alert('담당자 전화번호를 입력해주세요.')\n        } else {\n            axios({\n                method: 'post',\n                url: API_PATH,\n                headers: { 'content-type': 'application/json' },\n                data: { ...inputs, ...textarea }\n            }).then(res => {\n                if (res.status === 200) {\n                    alert('메일을 전송하였습니다. 홈으로 이동합니다.')\n                    window.location.pathname = '/'\n                } else {\n                    alert(\"메일전송에 실패하였습니다.\")\n                }\n            }).catch(error => console.error(error));\n            event.preventDefault()\n        }\n    };\n\n    const API_PATH: string = 'https://grigompictures.com/index.php'\n\n    return (\n        <div>\n            <div className=\"title-container\">\n                <div className=\"title\">\n                    <span>CONTACT</span>\n                </div>\n            </div>\n\n            <div className=\"Contact\">\n                <form method=\"POST\">\n                    <div>\n                        <label>회사명</label>\n                        <input\n                            type=\"text\"\n                            id=\"company\"\n                            name=\"company\"\n                            placeholder=\"Your Name\"\n                            value={company}\n                            onChange={onChangeInput}\n                        />\n\n                        <label>회사번호</label>\n                        <input\n                            type=\"text\"\n                            id=\"number\"\n                            name=\"number\"\n                            placeholder=\"Company Number\"\n                            value={number}\n                            onChange={onChangeInput}\n                        />\n\n                        <label>이메일</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={email}\n                            onChange={onChangeInput}\n                            required\n                        />\n\n                        <label>담당자 이름</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            value={name}\n                            onChange={onChangeInput}\n                            required\n                        />\n\n                        <label>담당자 전화번호</label>\n                        <input\n                            type=\"text\"\n                            id=\"phone\"\n                            name=\"phone\"\n                            placeholder=\"Phone\"\n                            value={phone}\n                            onChange={onChangeInput}\n                            required\n                        />\n\n                        <label>내용</label>\n                        <textarea\n                            id=\"message\"\n                            name=\"message\"\n                            placeholder=\"Write something..\"\n                            value={message}\n                            onChange={onChangeTextarea}\n                            required\n                        />\n                        <Button variant=\"contained\" color=\"default\" onClick={handleFormSubmit} >전송</Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\nexport default Contact","type matchTypes = {\n    match: {\n        isExact: boolean\n        params: {\n            data: string\n            type: string\n        }\n        path: string\n        url: string\n    }\n}\n\nfunction Details({ match }: matchTypes) {\n    return (\n        <div className=\"details\">\n            <div className=\"title-container\">\n                <div className=\"title\">\n                    <span>DETAILS</span>\n                </div>\n            </div>\n\n            <div className=\"details_box\">\n                <div className=\"details_iframe\">\n                    <iframe id=\"player\" src={`https://www.youtube.com/embed/${match.params.data}`} frameBorder=\"0\"></iframe>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Details","import { useDispatch, useSelector } from \"react-redux\";\nimport type { TypedUseSelectorHook } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"../redux/store\";\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from '../../hooks/useTypeSelector';\nimport { getYoutubeListVideosAction } from '../../redux/youtubeListGetVideos';\n\ninterface propsTypes {\n    playlistId: string;\n}\n\nfunction YoutubeVideoList({ playlistId }: propsTypes) {\n    const dispatch = useAppDispatch();\n    const { data, loading, error } = useAppSelector((state) => state.youtubeVideosList);\n\n    useEffect(() => {\n        dispatch(getYoutubeListVideosAction(playlistId));\n    }, [dispatch, playlistId]);\n\n    if (loading) {\n        return <div className=\"centered\">Loading videos...</div>;\n    }\n\n    if (error) {\n        return <div className=\"centered\">영상을 불러오던 중 오류가 발생했습니다.<br/>새로고침 해주세요.</div>;\n    }\n\n    return (\n        <>\n            <div className=\"imageBox\">\n                {data && data.items.map((value, index) => (\n                    Object.keys(value.snippet.thumbnails).length !== 0 && (\n                        <div className=\"image\" key={index}>\n                            <img\n                                className=\"image__img\"\n                                src={value.snippet.thumbnails.maxres ? value.snippet.thumbnails.maxres.url : value.snippet.thumbnails.high.url}\n                                alt='thumbnail'\n                            />\n                            <Link to={`/Details/${value.snippet.resourceId.videoId}`}>\n                                <div className=\"image__overlay image__overlay--youtube\">\n                                    <div className=\"image__title\">Grigom Pictures</div>\n                                    <p className=\"image__description\">\n                                        {value.snippet.title}\n                                    </p>\n                                </div>\n                            </Link>\n                        </div>\n                    )\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default YoutubeVideoList;\n","import Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport Tabs from '@mui/material/Tabs';\nimport { useRef, useState } from \"react\";\nimport { useAppSelector } from '../../hooks/useTypeSelector';\nimport YoutubeVideoList from './YoutubeVideoList';\nimport MenuIcon from '@mui/icons-material/Menu';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            style={{ width: '100%' }}\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nexport default function VerticalTabs() {\n    const { cartegory } = useAppSelector((state) => state.youtubeCategory);\n    const [tabVisible, setTablVisible] = useState(false);\n    const CartegoryRef = useRef<HTMLDivElement>(null);\n\n    const [value, setValue] = useState(0);\n\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n\n    const tabVisibleBtn = () => {\n        if (!tabVisible) {\n            if (CartegoryRef.current) {\n                CartegoryRef.current.style.marginLeft = '-200px';\n                setTablVisible(true);\n            }\n        } else {\n            if (CartegoryRef.current) {\n                CartegoryRef.current.style.marginLeft = '';\n                setTablVisible(false);\n            }\n        }\n    };\n\n    return (\n        <>\n            <Box\n                className='category-container'\n                sx={{ bgcolor: 'background.paper' }}\n                ref={CartegoryRef}\n            >\n                <div style={{ display: 'flex' }}>\n                    <Tabs\n                        orientation=\"vertical\"\n                        variant=\"scrollable\"\n                        value={value}\n                        onChange={handleChange}\n                        aria-label=\"Vertical tabs example\"\n                        sx={{ borderRight: 1, borderColor: 'divider', minWidth: '200px' }}\n                        TabIndicatorProps={{\n                            sx: {\n                                backgroundColor: 'orange', // indicator 색상\n                                width: '3px', // indicator 두께\n                                borderRadius: '4px', // indicator 모서리 둥글게\n                                height: 'auto', // indicator 높이 자동 조절\n                            }\n                        }}\n                    >\n                        {cartegory && cartegory.map((value, index) => (\n                            <Tab label={value.snippet.title} key={index}\n                                sx={{\n                                    color: 'black', // 기본 폰트 색상\n                                    '&.Mui-selected': {\n                                        color: 'orange', // 선택된 탭의 폰트 색상\n                                    },\n                                }}\n                            />\n                        ))}\n                    </Tabs>\n                    <div className={`tabCloseBtn`} onClick={tabVisibleBtn} >\n                        <MenuIcon />\n                    </div>\n                </div>\n\n                {/* 영상 리스트 */}\n                {cartegory && cartegory.map((item, index) => (\n                    <TabPanel value={value} index={index} key={item.id}>\n                        <YoutubeVideoList playlistId={item.id} />\n                    </TabPanel>\n                ))}\n            </Box>\n        </>\n    );\n}\n","import * as React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport './Loader.css'\n\nexport default function Loader() {\n    return (\n        <Box className='loader'>\n            <CircularProgress size={150} />\n        </Box>\n    );\n}","import { useLayoutEffect } from 'react';\nimport VerticalTabs from '../../component/Category/Category';\nimport Loader from '../../component/Loader';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useTypeSelector';\nimport { youtubeListPlaylistAction } from '../../redux/youtubeListPlaylist';\n\nconst CHANNEL_ID = 'UCBXwSHfXqRIJkaPs3ZMzKVA';\n\nfunction Works() {\n    const dispatch = useAppDispatch();\n    useLayoutEffect(() => {\n        dispatch(youtubeListPlaylistAction(CHANNEL_ID));\n    }, [dispatch]);\n\n    const { loading } = useAppSelector((state) => state.youtubeCategory);\n\n    return (\n        <>\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    <div className=\"title-container\">\n                        <div className=\"title\">\n                            <span>WORKS</span>\n                        </div>\n                    </div>\n                    <VerticalTabs />\n                </>\n            )}\n        </>\n    );\n}\n\nexport default Works;\n","import { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Footer from './component/Footer';\nimport Header from './component/Header';\nimport About from \"./pages/About/About\";\nimport Brands from './pages/Brands/Brands';\nimport Contact from './pages/Contact/Contact';\nimport Details from './pages/Details/Details';\nimport Works from './pages/Works/Works';\nimport './pages/About/About.css'\nimport './pages/Brands/Brands.css'\nimport './pages/Contact/Contact.css'\nimport './pages/Details/Details.css'\nimport './pages/Works/Works.css'\nimport './component/Category/Category.css'\n\n\nfunction App() {\n    return (\n        <>\n            <div className=\"wrapper\">\n                <header>\n                    <Header />\n                </header>\n                <main>\n                    <section>\n                        <Route exact path=\"/\" component={About} />\n                        <Switch>\n                            <Route path=\"/Brands\" component={Brands} />\n                            <Route path=\"/Works\" component={Works} />\n                            <Route path=\"/Contact\" component={Contact} />\n                            <Route path=\"/Details/:data\" component={Details} />\n                        </Switch>\n                    </section>\n                </main>\n                <footer>\n                    <Footer />\n                </footer>\n            </div>\n\n        </>\n    )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}