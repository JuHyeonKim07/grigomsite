[{"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/index.tsx":"1","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/App.tsx":"2","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/redux/store.tsx":"3","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Footer.tsx":"4","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Header.tsx":"5","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/redux/youtubeListGetVideos.tsx":"6","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/About/About.tsx":"7","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/redux/youtubeListPlaylist.tsx":"8","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Contact/Contact.tsx":"9","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Brands/Brands.tsx":"10","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Works/Works.tsx":"11","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Details/Details.tsx":"12","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Category/Category.tsx":"13","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Loader.tsx":"14","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/hooks/useTypeSelector.tsx":"15","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Category/YoutubeVideoList.tsx":"16","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/apis/keys.ts":"17"},{"size":713,"mtime":1734871201985,"results":"18","hashOfConfig":"19"},{"size":1432,"mtime":1718180403274,"results":"20","hashOfConfig":"19"},{"size":400,"mtime":1718193561735,"results":"21","hashOfConfig":"19"},{"size":512,"mtime":1734872538115,"results":"22","hashOfConfig":"19"},{"size":1625,"mtime":1718180403275,"results":"23","hashOfConfig":"19"},{"size":2118,"mtime":1734969108525,"results":"24","hashOfConfig":"19"},{"size":1679,"mtime":1734872534939,"results":"25","hashOfConfig":"19"},{"size":2176,"mtime":1734969111467,"results":"26","hashOfConfig":"19"},{"size":4579,"mtime":1734866911494,"results":"27","hashOfConfig":"19"},{"size":1535,"mtime":1734872531740,"results":"28","hashOfConfig":"19"},{"size":1027,"mtime":1718199589933,"results":"29","hashOfConfig":"19"},{"size":751,"mtime":1718180403282,"results":"30","hashOfConfig":"19"},{"size":3881,"mtime":1734872834856,"results":"31","hashOfConfig":"19"},{"size":303,"mtime":1718193781978,"results":"32","hashOfConfig":"19"},{"size":313,"mtime":1718180403278,"results":"33","hashOfConfig":"19"},{"size":2077,"mtime":1734872893491,"results":"34","hashOfConfig":"19"},{"size":87,"mtime":1734968617576,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hn0k7r",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/index.tsx",[],["74","75"],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/App.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/redux/store.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Footer.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Header.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/redux/youtubeListGetVideos.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/About/About.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/redux/youtubeListPlaylist.tsx",["76"],"/** 그리곰 픽쳐스 상업영상 채널아이디를 이용하여 재생목록 불러오기 재생목록은 카테고리로 사용됨.*/\n\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { youTubeAcsses } from '../apis/keys';\nimport { youtubeResponse, cartegory } from \"../getTypes\";\n\ninterface PostState {\n    loading: boolean;\n    error: string | null;\n    cartegory: cartegory\n}\n\nconst initialState = {\n    loading: false,\n    error: null,\n    cartegory: []\n} as PostState;\n\nconst BASE_URL = \"https://grigompictureshidefunctions.netlify.app\";\n\n// ACTION\nexport const youtubeListPlaylistAction = createAsyncThunk(\n  \"GET/YOUTUBE_CHANNELID\",\n  async (channelId: string, thunkAPI) => {\n    try {\n      // URL 생성\n      const url = new URL(\"youtube/v3/playlists\", BASE_URL);\n      const parameters = new URLSearchParams({\n        part: \"snippet\",\n        channelId: channelId,\n        maxResults: \"30\",\n        // API 키는 백엔드에서 처리됨\n      });\n      url.search = parameters.toString();\n\n      // API 호출\n      const { data } = await axios.get<youtubeResponse>(url.toString());\n      return data;\n    } catch (err: any) {\n      return thunkAPI.rejectWithValue({\n        errorMessage: \"호출에 실패했습니다.\",\n      });\n    }\n  }\n);\n\n// SLICE\nconst youtubeCategory = createSlice({\n    name: \"YOUTUBE_PLAYLIST\",\n    initialState,\n    reducers: {},\n    // createAsyncThunk 호출 처리 = extraReducers\n    extraReducers(builder) {\n        builder\n            .addCase(youtubeListPlaylistAction.pending, (state) => {\n                state.loading = true;\n            })\n            .addCase(youtubeListPlaylistAction.fulfilled, (state, action: PayloadAction<youtubeResponse>) => {\n                state.loading = false;\n                state.cartegory = action.payload.items\n            })\n            .addCase(youtubeListPlaylistAction.rejected, (state, action: PayloadAction<any>) => {\n                state.loading = false;\n                state.error = action.payload;\n            });\n    },\n});\n\n\nexport default youtubeCategory.reducer;","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Contact/Contact.tsx",["77"],"import { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\n\ntype inputTypes = {\n  company: string;\n  number: string;\n  email: string;\n  name: string;\n  phone: string;\n};\n\ntype textAreaType = {\n  message: string;\n};\n\nfunction Contact() {\n  const [textarea, setTextarea] = useState<textAreaType>({\n    message: \"\",\n  });\n  const [inputs, setInputs] = useState<inputTypes>({\n    company: \"\",\n    number: \"\",\n    email: \"\",\n    name: \"\",\n    phone: \"\",\n  });\n\n  const { company, number, email, name, phone } = inputs;\n  const { message } = textarea;\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    setInputs({\n      ...inputs, // 기존의 input 객체를 복사한 뒤\n      [name]: value, // name 키를 가진 값을 value 로 설정\n    });\n  };\n\n  const onChangeTextarea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value, name } = e.target;\n    setTextarea({\n      ...textarea,\n      [name]: value,\n    });\n  };\n\n  function handleFormSubmit(event: React.FormEvent) {\n    // 언제나 HTMLInputElement 가 반환된다는 것을 알려줌. (타입 단언)\n    const email_Input = (document.getElementById(\"email\") as HTMLInputElement)\n      .value;\n    const name_Input = (document.getElementById(\"name\") as HTMLInputElement)\n      .value;\n    const phone_Input = (document.getElementById(\"phone\") as HTMLInputElement)\n      .value;\n\n    if (email_Input.length === 0) {\n      alert(\"이메일을 입력해주세요.\");\n    } else if (name_Input.length === 0) {\n      alert(\"담당자 이름을 입력해주세요.\");\n    } else if (phone_Input.length === 0) {\n      alert(\"담당자 전화번호를 입력해주세요.\");\n    } else {\n      axios({\n        method: \"post\",\n        url: API_PATH,\n        headers: { \"content-type\": \"application/json\" },\n        data: { ...inputs, ...textarea },\n      })\n        .then((res) => {\n          if (res.status === 200) {\n            alert(\"메일을 전송하였습니다. 홈으로 이동합니다.\");\n            window.location.pathname = \"/\";\n          } else {\n            alert(\"메일전송에 실패하였습니다.\");\n          }\n        })\n        .catch((error) => console.error(error));\n      event.preventDefault();\n    }\n  }\n\n  const API_PATH: string = \"https://grigompictures.com/index.php\";\n\n  return (\n    <div>\n      <div className=\"title-container\">\n        <div className=\"title\">\n          <span>CONTACT</span>\n        </div>\n      </div>\n\n      <div className=\"Contact\">\n        <form method=\"POST\">\n          <div>\n            <label>회사명</label>\n            <input\n              type=\"text\"\n              id=\"company\"\n              name=\"company\"\n              placeholder=\"Your Name\"\n              value={company}\n              onChange={onChangeInput}\n            />\n\n            <label>회사번호</label>\n            <input\n              type=\"text\"\n              id=\"number\"\n              name=\"number\"\n              placeholder=\"Company Number\"\n              value={number}\n              onChange={onChangeInput}\n            />\n\n            <label>이메일</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Your email\"\n              value={email}\n              onChange={onChangeInput}\n              required\n            />\n\n            <label>담당자 이름</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={onChangeInput}\n              required\n            />\n\n            <label>담당자 전화번호</label>\n            <input\n              type=\"text\"\n              id=\"phone\"\n              name=\"phone\"\n              placeholder=\"Phone\"\n              value={phone}\n              onChange={onChangeInput}\n              required\n            />\n\n            <label>내용</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              placeholder=\"Write something..\"\n              value={message}\n              onChange={onChangeTextarea}\n              required\n            />\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => alert(\"현재는 메일기능을 지원하지 않습니다.\")}\n            >\n              전송\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default Contact;\n","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Brands/Brands.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Works/Works.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/pages/Details/Details.tsx",["78"],"type matchTypes = {\n    match: {\n        isExact: boolean\n        params: {\n            data: string\n            type: string\n        }\n        path: string\n        url: string\n    }\n}\n\nfunction Details({ match }: matchTypes) {\n    return (\n        <div className=\"details\">\n            <div className=\"title-container\">\n                <div className=\"title\">\n                    <span>DETAILS</span>\n                </div>\n            </div>\n\n            <div className=\"details_box\">\n                <div className=\"details_iframe\">\n                    <iframe id=\"player\" src={`https://www.youtube.com/embed/${match.params.data}`} frameBorder=\"0\"></iframe>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Details","/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Category/Category.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Loader.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/hooks/useTypeSelector.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/component/Category/YoutubeVideoList.tsx",[],"/Users/kimjuhyeon/Desktop/develop/grigomsite/src/apis/keys.ts",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":23},{"ruleId":"83","severity":1,"message":"87","line":48,"column":12,"nodeType":"85","messageId":"86","endLine":48,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":24,"column":21,"nodeType":"90","endLine":24,"endColumn":116},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'youTubeAcsses' is defined but never used.","Identifier","unusedVar","'handleFormSubmit' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]